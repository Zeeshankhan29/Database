show databases;
create database if not exists ineuron_fsda;
use ineuron_fsda;

create table if not exists bank_details(
age int,
job varchar(30),
marital varchar(30),
education varchar(30),
`default` varchar(30),
balance int ,
housing varchar(30),
loan varchar(30) ,
contact varchar(30),
`day` int,
`month` varchar(30) ,
duration int ,
campaign int,
pdays int ,
previous int ,
poutcome varchar(30) ,
y varchar(30));

select * from bank_details;

insert into bank_details values(58,"management","married","tertiary","no",2143,"yes","no","unknown",5,"may",261,1,-1,0,"unknown","no");

insert into bank_details values
(44,"technician","single","secondary","no",29,"yes","no","unknown",5,"may",151,1,-1,0,"unknown","no"),
(33,"entrepreneur","married","secondary","no",2,"yes","yes","unknown",5,"may",76,1,-1,0,"unknown","no");

load data local  infile 'C:/bank-full.csv'
into table bank_details
fields terminated by ';'
enclosed by '"'
lines terminated by '\n'
ignore 1 rows;

OPT_LOCAL_INFILE=1
SHOW GLOBAL VARIABLES LIKE 'local_infile';
set global local_infile = 1;


select count(*) from  bank_details

select * from bank_details

select age , loan , job from bank_details

select `default` from  bank_details

select * from bank_details limit 10

select * from bank_details where age  =  33

select * from bank_details where age = 60

select * from bank_details where age = 60 and job = 'retired'

select * from bank_details where education = 'unknown' or marital = 'single'

select * from bank_details where (education = 'unknown' or marital = 'single') and balance < 500

select distinct job from bank_details

select * from bank_details

select * from bank_details order by age
select * from bank_details order by age desc


select * from bank_details;
drop table bank_details;

select * from bank_details where balance =(select max(balance) from bank_details);
select * from bank_details order by balance desc limit 0,1;

select * from bank_details where balance =(select min(balance) from bank_details);
select * from bank_details where balance<0 order by balance limit 0,1 ;

select * from bank_details order by age desc limit 0,1;
select * from bank_details where age = (select max(age) from bank_details) limit 1;

select * from bank_details order by age desc limit 2,1;

select max(balance) from bank_details;
select min(balance) from bank_details;
select * from bank_details where loan = 'yes'

select  avg(balance) from bank_details where job = 'admin.'

select  avg(balance) from bank_details where job = 'admin.'

select * from bank_details where job = 'unknown' and age <= 45

select * from bank_details where education = 'primary' and job = 'unknown'


select * from bank_details where balance < 0

select balance , housing  from bank_details where housing = 'no'

select count(*), marital from bank_details where education ='primary' and loan ='yes' group by marital order by marital;


delimiter $$
create procedure Myprocedure()
begin
	select * from bank_details;
end $$

call  Myprocedure();

delimiter $$
create procedure test(in v1 varchar(50) ,in v2 varchar(50))
begin
	select * from bank_details  where education =v1 and housing =v2;
end $$


call test('primary','yes');

delimiter $$
create procedure test1(in v1 varchar(50) ,in v2 varchar(50))
begin
	select * from bank_details  where job =v1 and housing =v2;
end $$

call test1('blue-collar','yes');

create view Myviews as
select job ,marital, education,`default` from bank_details;

select * from Myviews;



use ineuron_fsda;



create table if not exists dress(
`Dress_ID`	varchar(50),
`Style`	varchar(50),
`Price`	varchar(50),
`Rating`	varchar(50),
`Size`	varchar(50),
`Season` varchar(50),
`NeckLine`	varchar(50),
`SleeveLength`	varchar(50),
`waiseline`	varchar(50),
`Material`	varchar(50),
`FabricType`	varchar(50),
`Decoration`	varchar(50),
`Pattern` varchar(50),
`Type`	varchar(50),
`Recommendation` varchar(50));



load data local  infile 'C:/AttributeDataSet.csv'
into table dress
fields terminated by ','
enclosed by '"'
lines terminated by '\n'
ignore 1 rows;

select * from dress;
drop table dress;

OPT_LOCAL_INFILE=1;
SHOW GLOBAL VARIABLES LIKE 'local_infile';
set global local_infile = 1;


create table if not exists test3 (
test_id int ,
test_name varchar(30) ,
test_mailid varchar(30),
teast_adress varchar(30),
test_salary int check(test_salary > 10000));

insert into test3 values (1,'sudhanshu','sudhanshu@ineuron.ai','benglaore' , 500),
(2,'krish','krish@gmail.com', 'bengalore' , 30000),
(3,'hitesh' ,'hitesh@ineuron.ai','bengalore' , 111000),
(4,'shubahm' , 'shudham@gmail.com', 'jaipur',20000);

select * from test3


create table if not exists test (
test_id int ,
test_name varchar(30) ,
test_mailid varchar(30),
test_address varchar(30) check (test_address='bangalore'),
test_salary int check(test_salary > 10000));

insert into test values (1,'sudhanshu','sudhanshu@ineuron.ai','bangalore' , 50000),
(2,'krish','krish@gmail.com', 'bangalore' , 30000),
(3,'hitesh' ,'hitesh@ineuron.ai','bangalore' , 111000),
(4,'shubahm' , 'shudham@gmail.com', 'bangalore',20000);

select * from test

create table if not exists test1 (
test_id int ,
test_name varchar(30) ,
test_mailid varchar(30),
test_address varchar(30) ,
test_salary int,
primary key (test_id) );

insert into test1 values (21,'sudhanshu','sudhanshu@ineuron.ai','bangalore' , 50000),
(2,'krish','krish@gmail.com', 'bangalore' , 30000),
(3,'hitesh' ,'hitesh@ineuron.ai','bangalore' , 111000),
(4,'shubahm' , 'shudham@gmail.com', 'bangalore',20000);

select * from test1;


create table if not exists test4(
test_id int not null auto_increment,
test_name varchar(30) ,
test_mailid varchar(30),
teast_adress varchar(30),
primary key (test_id));

drop table test4;

insert into test4 values (Null,'Zeeshan','sudhanshu@ineuron.ai','bangalore' ),
(Null,'Zeeshan','krish@gmail.com', 'bangalore' ),
(Null,'Zeeshan' ,'hitesh@ineuron.ai','bangalore' ),
(Null,'Zeeshan' , 'shudham@gmail.com', 'bangalore');


select * from test4;

alter table test4
add check (test_name ='Zeeshan');

create table if not exists test5(
test_id int not null auto_increment,
test_name varchar(30) ,
test_mailid varchar(30),
teast_adress varchar(30),
primary key (test_id));

drop table test5

insert into test5 values (564,'Zeeshan','sudhanshu@ineuron.ai','bangalore' ),
(Null,'Zeeshan','krish@gmail.com', 'bangalore' ),
(110,'Zeeshan' ,'hitesh@ineuron.ai','bangalore' ),
(5060,'Zeeshan' , 'shudham@gmail.com', 'bangalore');

select * from test5;

create table if not exists test6(
test_id varchar(20)  default 'No_id',
test_name varchar(30) ,
test_mailid varchar(30),
teast_adress varchar(30),
primary key (test_id));

select * from test6;
drop table test6
insert into test6 (test_id,test_name,test_mailid,teast_adress) values (45,'Faizan','sudhanshu@ineuron.ai','bangalore' );


create table if not exists test7(
test_id varchar(20)  default 'No_id',
test_name varchar(30) ,
test_mailid varchar(30) unique,
teast_adress varchar(30) ,
primary key (test_id));

insert into test7 values (5641,'Zeeshan','sudhanshu@ineuron.a1i','bangalore' ),
(5681,'Zeeshan','krish@gmail.com1', 'bangalore' ),
(1101,'Zeeshan' ,'hitesh@ineuron.ai1','bangalore' ),
(50601,'Zeeshan' , 'shudham@gmail.com1', 'bangalore');

select * from test7

create table if not exists test8(
test_id int  not null auto_increment ,
test_name varchar(30)  default 'unknown',
test_mailid varchar(30) unique,
teast_adress varchar(30) check(teast_adress='Bangalore') ,
primary key (test_id));

insert into test8  (test_mailid,teast_adress) values ('farhenen@ineuro21n.a1i','Bangalore' );
select * from test8





